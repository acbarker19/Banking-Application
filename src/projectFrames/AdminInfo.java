/*
This class is the AdminInfo frame. If a user is an admin, they will be sent
here instead of the normal user page. This page displays the admin's name and
allows them to change any user's account balance. The admin can use one text
field to enter a user's username, as well as two text fields and two buttons to
either deposit or withdraw money from that user's account. These changes are
saved between sessions.

Completed: 2/13/18

Created by:
    Alec Barker
    Jarrod Luca
    Cierra Roller
*/
package projectFrames;

import bankClasses.User;
import javax.swing.JFrame;
import projectFrames.Login;
import projectFrames.Login;

public class AdminInfo extends javax.swing.JFrame {
    
    private Login loginFrame;
    private User user;
    
    public AdminInfo(Login l) {
        initComponents();
        loginFrame = l;
        
        //Creates the column headers when displaying info
        columnsField.setText("Name\tBalance\tUsername\tPassword\tAdmin?");
    }
    
    //Gets the user's account and displays their name
    public void setUser(User user) {
        this.user = user;
        this.user.fillUserList();
        name.setText(user.getFirstName());
        printUsers(this.user.getUserList()); 
    }
    
    //Gets each user's info from the text area and returns it
    public String[] textAreaToArray() {
        String text = textArea.getText();
        System.out.println("user text; " + text);
        String[] eachUser = text.split("\n");
        System.out.println("eachUser length: " + eachUser.length);
        return eachUser;
    }
    
    public User[] getTextAreaUserList() {
        // create user object array of appropritate size
        User[] editList = new User[textAreaToArray().length];
        // fill userList with new user objects
        for (int i = 0; i < editList.length; i++) { 
            // regex to split strings in text area
            String[] userInfo = textAreaToArray()[i].split("\\t|\\s");
            // create new user objects with data from userInfo array
            String first = userInfo[0];
            String last = userInfo[1];
            // converts string to int & remove dollar sign
            double balance = Double.parseDouble(userInfo[2].replace("$", ""));
            String user = userInfo[3];
            String pass = userInfo[4];  
            
            String adminStr = userInfo[5];
            // remove new line and space characters from last item - 
            // causes value to always return false
            adminStr = adminStr.trim();
            // converts string to boolean
            boolean adminBool = Boolean.parseBoolean(adminStr);
            // add new user to userList at index
            editList[i] = new User(first, last, user, pass, balance, adminBool);
        }
        return editList;
    }
    
    //Displays all users' information in a list
    public void printUsers(User[] usersToPrint) {
//        printHeader();
        for (int i = 0; i < usersToPrint.length; i++) {
            textArea.append(
                usersToPrint[i].getFirstName() + " " +
                usersToPrint[i].getLastName()+ "\t$" +
                String.format("%.2f", usersToPrint[i].getBalance()) + "\t" +
                usersToPrint[i].getUsername() + "\t" + 
                usersToPrint[i].getPassword() + "\t" +
                usersToPrint[i].getAdmin() + "\n"
            );
        }
    }
    
//    public void printHeader() {
//        textArea.append("Name\t"+"Balance\t"+"Username\t"+"Password\t"+"Admin?\n");
//        textArea.append("=====================================================\n");
//    }
    
    //Resets the all text fields
    public void resetTextFields() {
        usernameField.setText("");
        depositField.setText("");
        withdrawField.setText("");
        textArea.setText("");
        error.setText("");
    }
    
    public void copyChangedUsersToObjectArray(User[] newUsers) {
      // copy matching user to original User array
      for (int i = 0; i < this.user.getUserList().length; i++) {
        for (int j = 0; j < getTextAreaUserList().length; j++) {
                if (this.user.getUserList()[i].getUsername().equals(newUsers[j].getUsername())) {
                    this.user.getUserList()[i] = newUsers[j];
                }
            } 
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        depositField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        withdrawField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        depositButton = new javax.swing.JButton();
        withdrawButton = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        displayAll = new javax.swing.JButton();
        columnsField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        jLabel1.setText("Welcome,");

        name.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        name.setText("jLabel2");

        jLabel2.setText("This page allows you to edit any user's account information.");

        jLabel3.setText("Username:");

        usernameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Deposit:");

        jLabel5.setText("Withdraw:");

        jLabel6.setText("$");

        jLabel7.setText("$");

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        depositButton.setText("Enter");
        depositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositButtonActionPerformed(evt);
            }
        });

        withdrawButton.setText("Enter");
        withdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawButtonActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        error.setForeground(new java.awt.Color(255, 0, 0));

        displayAll.setText("Display All");
        displayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAllActionPerformed(evt);
            }
        });

        columnsField.setEditable(false);
        columnsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                columnsFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("All accounts listed here can be altered.");

        jLabel9.setText("Enter the username of the account you wish to change.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logout))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(depositField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(depositButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(withdrawField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(withdrawButton))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(usernameField)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(displayAll)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(columnsField)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(name)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logout)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayAll)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(depositField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depositButton)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel5)
                        .addComponent(withdrawField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(withdrawButton))
                    .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(columnsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        this.loginFrame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutActionPerformed

    private void depositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositButtonActionPerformed
        User[] listToEdit = getTextAreaUserList();
        Double value;
        Double temp;
        temp = Double.parseDouble(depositField.getText());
        value = (Math.round(temp * 100.0))/100.0;
        // call deposit function on each user from text field
        for (int i = 0; i < getTextAreaUserList().length; i++) {
            if((Double.parseDouble(depositField.getText())) < 0){
                error.setText("Please use a positive number");
            }
            else{
                listToEdit[i].deposit(value);
                error.setText("");
            }
        }
        copyChangedUsersToObjectArray(listToEdit);
        
        // copy data permanently to psuedo database
        this.user.writeNewFile(this.user.getUserList());
        textArea.setText("");
        printUsers(listToEdit);
    }//GEN-LAST:event_depositButtonActionPerformed

    private void withdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawButtonActionPerformed
        User[] listToEdit = getTextAreaUserList();
        Double value;
        Double temp;
        temp = Double.parseDouble(withdrawField.getText());
        value = (Math.round(temp * 100.0))/100.0;
        // call withdraw function on each user from text field
        for (int i = 0; i < getTextAreaUserList().length; i++) {
            if((Double.parseDouble(withdrawField.getText())) < 0){
                error.setText("Please use a positive number");
            }
            else{
                if ((listToEdit[i].getBalance() - value) < 0) { 
                    error.setText("Insufficient funds");
                    return;
                }
                // remove any prev error message
                error.setText("");
                listToEdit[i].withdraw(value);
            }
        }
        copyChangedUsersToObjectArray(listToEdit);
        // copy data permanently to psuedo database
        this.user.writeNewFile(this.user.getUserList());
        textArea.setText("");
        printUsers(listToEdit);
    }//GEN-LAST:event_withdrawButtonActionPerformed

    private void displayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAllActionPerformed
        resetTextFields();
        printUsers(this.user.getUserList());
    }//GEN-LAST:event_displayAllActionPerformed

    // update visible users on key press
    private void usernameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameFieldKeyReleased
        // ignore backspace and delete
        if (evt.getKeyCode() == 8 || evt.getKeyCode() == 111) {}
        int length = this.user.getUserList().length;
        // size array as large as necessary
        textArea.setText("");
//        printHeader();
        for (int i = 0; i < length; i++) {
            if ((this.user.getUserList()[i].getUsername()).contains(usernameField.getText())) {
                textArea.append(
                this.user.getUserList()[i].getFirstName() + " " +
                this.user.getUserList()[i].getLastName()+ "\t$" +
                String.format("%.2f", this.user.getUserList()[i].getBalance()) + "\t" +
                this.user.getUserList()[i].getUsername() + "\t" + 
                this.user.getUserList()[i].getPassword() + "\t" +
                this.user.getUserList()[i].getAdmin() + "\n"
                );
            }
        }
    }//GEN-LAST:event_usernameFieldKeyReleased

    private void columnsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_columnsFieldActionPerformed
        
    }//GEN-LAST:event_columnsFieldActionPerformed
 
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField columnsField;
    private javax.swing.JButton depositButton;
    private javax.swing.JTextField depositField;
    private javax.swing.JButton displayAll;
    private javax.swing.JLabel error;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton logout;
    private javax.swing.JLabel name;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField usernameField;
    private javax.swing.JButton withdrawButton;
    private javax.swing.JTextField withdrawField;
    // End of variables declaration//GEN-END:variables
}
